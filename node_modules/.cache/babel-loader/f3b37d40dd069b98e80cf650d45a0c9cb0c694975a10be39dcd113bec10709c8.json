{"ast":null,"code":"var _jsxFileName = \"/Users/aparnabhutada/Desktop/ourproject/src/pages/SignIn.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./SignIn.css\"; // Add your custom CSS for styling\n// import logo from \"./logo.png\"; // Replace with the actual logo path\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SignIn() {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState({});\n  const [passwordVisible, setPasswordVisible] = useState(false);\n  const validateForm = () => {\n    const newErrors = {};\n    const emailRegex = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n    const hasUpperCase = /[A-Z]/.test(password);\n    const hasLowerCase = /[a-z]/.test(password);\n    const hasSpecialChar = /[!@#$%^&*(),.?\":{}|<>]/.test(password);\n    const hasMinLength = password.length >= 8;\n    if (!email) {\n      newErrors.email = \"Email is required\";\n    } else if (!emailRegex.test(email)) {\n      newErrors.email = \"Invalid email format\";\n    }\n\n    // Password validation\n    if (password.trim() === \"\") {\n      newErrors.password = \"Password is required\";\n    } else if (!hasUpperCase || !hasLowerCase || !hasSpecialChar || !hasMinLength) {\n      newErrors.password = \"Password must contain at least 8 characters, including uppercase, lowercase, and a special character.\";\n    }\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  const handleSignIn = e => {\n    e.preventDefault();\n    if (validateForm()) {\n      console.log(\"Form is valid. Proceed with submission.\");\n      console.log(\"Email:\", email);\n      console.log(\"Password:\", password);\n    }\n  };\n  const togglePasswordVisibility = () => {\n    setPasswordVisible(!passwordVisible);\n  };\n  const handleOnClick = e => {\n    e.preventDefault();\n    if (validateForm()) {\n      alert(\"Form is valid!\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signin-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"signin-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"signin-title\",\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"signin-subtitle\",\n        children: \"Enter your email and password to sign in!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSignIn,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"input-label\",\n            htmlFor: \"email\",\n            children: \"Email*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"email\",\n            type: \"text\",\n            className: \"input-field\",\n            placeholder: \"mail@simple.com\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 11\n          }, this), errors.email && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-text\",\n            children: errors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 28\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"input-label\",\n            htmlFor: \"password\",\n            children: \"Password*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"password-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"password\",\n              type: passwordVisible ? \"text\" : \"password\",\n              className: \"input-field\",\n              placeholder: \"Min. 8 characters\",\n              value: password,\n              onChange: e => setPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"password-toggle\",\n              onClick: togglePasswordVisibility,\n              children: passwordVisible ? \"Hide\" : \"Show\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 11\n          }, this), errors.password && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-text\",\n            children: errors.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"forgot-password\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/forgot-password\",\n            className: \"forgot-link\",\n            children: \"Forgot Password?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"signin-button\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(SignIn, \"sbRV3OlxE8AuOgmb+qeNNowuOrg=\");\n_c = SignIn;\nvar _c;\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SignIn","_s","email","setEmail","password","setPassword","errors","setErrors","passwordVisible","setPasswordVisible","validateForm","newErrors","emailRegex","hasUpperCase","test","hasLowerCase","hasSpecialChar","hasMinLength","length","trim","Object","keys","handleSignIn","e","preventDefault","console","log","togglePasswordVisibility","handleOnClick","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","type","placeholder","value","onChange","target","onClick","href","_c","$RefreshReg$"],"sources":["/Users/aparnabhutada/Desktop/ourproject/src/pages/SignIn.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./SignIn.css\"; // Add your custom CSS for styling\n// import logo from \"./logo.png\"; // Replace with the actual logo path\n\nexport default function SignIn() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState({});\n  const [passwordVisible, setPasswordVisible] = useState(false);\n\n\n  const validateForm = () => {\n    const newErrors = {};\n    const emailRegex = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n    const hasUpperCase = /[A-Z]/.test(password);\n    const hasLowerCase = /[a-z]/.test(password);\n    const hasSpecialChar = /[!@#$%^&*(),.?\":{}|<>]/.test(password);\n    const hasMinLength = password.length >= 8;\n\n    if (!email) {\n      newErrors.email = \"Email is required\";\n    } else if (!emailRegex.test(email)) {\n      newErrors.email = \"Invalid email format\";\n    }\n\n    // Password validation\n    if (password.trim() === \"\") {\n        newErrors.password = \"Password is required\";\n      } else if (!hasUpperCase || !hasLowerCase || !hasSpecialChar || !hasMinLength) {\n        newErrors.password =\n          \"Password must contain at least 8 characters, including uppercase, lowercase, and a special character.\";\n      }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSignIn = (e) => {\n    e.preventDefault();\n    if (validateForm()) {\n      console.log(\"Form is valid. Proceed with submission.\");\n      console.log(\"Email:\", email);\n      console.log(\"Password:\", password);\n    }\n  };\n\n  const togglePasswordVisibility = () => {\n    setPasswordVisible(!passwordVisible);\n  };\n\n\n  const handleOnClick = (e) => {\n    e.preventDefault();\n    if (validateForm()) {\n      alert(\"Form is valid!\");\n    }\n  };\n\n  return (\n    <div className=\"signin-container\">\n      <div className=\"signin-card\">\n        {/* <img src={logo} alt=\"Logo\" className=\"signin-logo\" /> */}\n        <h4 className=\"signin-title\">Sign In</h4>\n        <p className=\"signin-subtitle\">Enter your email and password to sign in!</p>\n        <form onSubmit={handleSignIn}>\n        <div className=\"input-group\">\n          <label className=\"input-label\" htmlFor=\"email\">\n            Email*\n          </label>\n          <input\n            id=\"email\"\n            type=\"text\"\n            className=\"input-field\"\n            placeholder=\"mail@simple.com\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n          {errors.email && <span className=\"error-text\">{errors.email}</span>}\n        </div>\n\n        <div className=\"input-group\">\n          <label className=\"input-label\" htmlFor=\"password\">\n            Password*\n          </label>\n          <div className=\"password-container\">\n            <input\n              id=\"password\"\n              type={passwordVisible ? \"text\" : \"password\"}\n              className=\"input-field\"\n              placeholder=\"Min. 8 characters\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            <button\n                type=\"button\"\n                className=\"password-toggle\"\n                onClick={togglePasswordVisibility}\n              >\n                {passwordVisible ? \"Hide\" : \"Show\"}\n              </button>\n          </div>\n          {errors.password && <span className=\"error-text\">{errors.password}</span>}\n        </div>\n\n        <div className=\"forgot-password\">\n          <a href=\"/forgot-password\" className=\"forgot-link\">\n            Forgot Password?\n          </a>\n        </div>\n\n        <button type=\"submit\" className=\"signin-button\">\n          Sign In\n        </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}