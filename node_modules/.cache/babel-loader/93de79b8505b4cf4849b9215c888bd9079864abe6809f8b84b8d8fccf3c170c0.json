{"ast":null,"code":"var _jsxFileName = \"/Users/aparnabhutada/Desktop/ourproject/src/pages/PredictionResult.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PredictionResult = () => {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const {\n    result,\n    filename\n  } = location.state || {};\n  if (!result || !filename) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No prediction data available. Please upload an image first.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }, this);\n  }\n  const imageUrl = `http://127.0.0.1:5000/uploads/${filename}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Prediction Result\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Result:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 12\n        }, this), \" \", result]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Uploaded Image:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imageUrl,\n        alt: \"Uploaded MRI\",\n        style: {\n          maxWidth: \"100%\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate(\"/\"),\n        children: \"Go Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(PredictionResult, \"ZmJpvzBBf8J7VCgSKqUUk0eHjAY=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = PredictionResult;\nexport default PredictionResult;\nvar _c;\n$RefreshReg$(_c, \"PredictionResult\");","map":{"version":3,"names":["React","useLocation","useNavigate","jsxDEV","_jsxDEV","PredictionResult","_s","location","navigate","result","filename","state","children","fileName","_jsxFileName","lineNumber","columnNumber","imageUrl","className","src","alt","style","maxWidth","onClick","_c","$RefreshReg$"],"sources":["/Users/aparnabhutada/Desktop/ourproject/src/pages/PredictionResult.js"],"sourcesContent":["import React from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\n\nconst PredictionResult = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  const { result, filename } = location.state || {};\n\n  if (!result || !filename) {\n    return <p>No prediction data available. Please upload an image first.</p>;\n  }\n\n  const imageUrl = `http://127.0.0.1:5000/uploads/${filename}`;\n\n  return (\n    <div className=\"container\">\n      <div className=\"result-box\">\n        <h2>Prediction Result</h2>\n        <p><strong>Result:</strong> {result}</p>\n        <h3>Uploaded Image:</h3>\n        <img src={imageUrl} alt=\"Uploaded MRI\" style={{ maxWidth: \"100%\" }} />\n        <button onClick={() => navigate(\"/\")}>Go Back</button>\n      </div>\n    </div>\n  );\n};\n\nexport default PredictionResult;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAMO,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAE9B,MAAM;IAAEO,MAAM;IAAEC;EAAS,CAAC,GAAGH,QAAQ,CAACI,KAAK,IAAI,CAAC,CAAC;EAEjD,IAAI,CAACF,MAAM,IAAI,CAACC,QAAQ,EAAE;IACxB,oBAAON,OAAA;MAAAQ,QAAA,EAAG;IAA2D;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAC3E;EAEA,MAAMC,QAAQ,GAAG,iCAAiCP,QAAQ,EAAE;EAE5D,oBACEN,OAAA;IAAKc,SAAS,EAAC,WAAW;IAAAN,QAAA,eACxBR,OAAA;MAAKc,SAAS,EAAC,YAAY;MAAAN,QAAA,gBACzBR,OAAA;QAAAQ,QAAA,EAAI;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1BZ,OAAA;QAAAQ,QAAA,gBAAGR,OAAA;UAAAQ,QAAA,EAAQ;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACP,MAAM;MAAA;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxCZ,OAAA;QAAAQ,QAAA,EAAI;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxBZ,OAAA;QAAKe,GAAG,EAAEF,QAAS;QAACG,GAAG,EAAC,cAAc;QAACC,KAAK,EAAE;UAAEC,QAAQ,EAAE;QAAO;MAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACtEZ,OAAA;QAAQmB,OAAO,EAAEA,CAAA,KAAMf,QAAQ,CAAC,GAAG,CAAE;QAAAI,QAAA,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACV,EAAA,CAvBID,gBAAgB;EAAA,QACHJ,WAAW,EACXC,WAAW;AAAA;AAAAsB,EAAA,GAFxBnB,gBAAgB;AAyBtB,eAAeA,gBAAgB;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}