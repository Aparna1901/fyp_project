{"ast":null,"code":"var _jsxFileName = \"/Users/aparnabhutada/Desktop/ourproject/src/pages/SignIn.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./SignIn.css\"; // Add your custom CSS for styling\n// import logo from \"./logo.png\"; // Replace with the actual logo path\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SignIn() {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState({});\n  const validateForm = () => {\n    const newErrors = {};\n    const emailRegex = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n    const hasUpperCase = /[A-Z]/.test(password);\n    const hasLowerCase = /[a-z]/.test(password);\n    const hasSpecialChar = /[!@#$%^&*(),.?\":{}|<>]/.test(password);\n    const hasMinLength = password.length >= 8;\n    if (!email) {\n      newErrors.email = \"Email is required\";\n    } else if (!emailRegex.test(email)) {\n      newErrors.email = \"Invalid email format\";\n    }\n\n    // Password validation\n    if (password.trim() === \"\") {\n      newErrors.password = \"Password is required\";\n    } else if (!hasUpperCase || !hasLowerCase || !hasSpecialChar || !hasMinLength) {\n      newErrors.password = \"Password must contain at least 8 characters, including uppercase, lowercase, and a special character.\";\n    }\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  const handleOnClick = e => {\n    e.preventDefault();\n    if (validateForm()) {\n      alert(\"Form is valid!\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signin-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"signin-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"signin-title\",\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"signin-subtitle\",\n        children: \"Enter your email and password to sign in!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"input-label\",\n          htmlFor: \"email\",\n          children: \"Email*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"email\",\n          type: \"text\",\n          className: \"input-field\",\n          placeholder: \"mail@simple.com\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), errors.email && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error-text\",\n          children: errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"input-label\",\n          htmlFor: \"password\",\n          children: \"Password*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"password-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"password\",\n            type: \"password\",\n            className: \"input-field\",\n            placeholder: \"Min. 8 characters\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"password-toggle\",\n            onClick: () => setPassword(password ? \"\" : password),\n            children: \"Show\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), errors.password && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error-text\",\n          children: errors.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forgot-password\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/forgot-password\",\n          className: \"forgot-link\",\n          children: \"Forgot Password?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleOnClick,\n        className: \"signin-button\",\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(SignIn, \"RUz19ZpuYKJ+4Hu01ENB4zoUS3U=\");\n_c = SignIn;\nvar _c;\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SignIn","_s","email","setEmail","password","setPassword","errors","setErrors","validateForm","newErrors","emailRegex","hasUpperCase","test","hasLowerCase","hasSpecialChar","hasMinLength","length","trim","Object","keys","handleOnClick","e","preventDefault","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","type","placeholder","value","onChange","target","onClick","href","_c","$RefreshReg$"],"sources":["/Users/aparnabhutada/Desktop/ourproject/src/pages/SignIn.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./SignIn.css\"; // Add your custom CSS for styling\n// import logo from \"./logo.png\"; // Replace with the actual logo path\n\nexport default function SignIn() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState({});\n\n  const validateForm = () => {\n    const newErrors = {};\n    const emailRegex = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n    const hasUpperCase = /[A-Z]/.test(password);\n    const hasLowerCase = /[a-z]/.test(password);\n    const hasSpecialChar = /[!@#$%^&*(),.?\":{}|<>]/.test(password);\n    const hasMinLength = password.length >= 8;\n\n    if (!email) {\n      newErrors.email = \"Email is required\";\n    } else if (!emailRegex.test(email)) {\n      newErrors.email = \"Invalid email format\";\n    }\n\n    // Password validation\n    if (password.trim() === \"\") {\n        newErrors.password = \"Password is required\";\n      } else if (!hasUpperCase || !hasLowerCase || !hasSpecialChar || !hasMinLength) {\n        newErrors.password =\n          \"Password must contain at least 8 characters, including uppercase, lowercase, and a special character.\";\n      }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleOnClick = (e) => {\n    e.preventDefault();\n    if (validateForm()) {\n      alert(\"Form is valid!\");\n    }\n  };\n\n  return (\n    <div className=\"signin-container\">\n      <div className=\"signin-card\">\n        {/* <img src={logo} alt=\"Logo\" className=\"signin-logo\" /> */}\n        <h4 className=\"signin-title\">Sign In</h4>\n        <p className=\"signin-subtitle\">Enter your email and password to sign in!</p>\n\n        <div className=\"input-group\">\n          <label className=\"input-label\" htmlFor=\"email\">\n            Email*\n          </label>\n          <input\n            id=\"email\"\n            type=\"text\"\n            className=\"input-field\"\n            placeholder=\"mail@simple.com\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n          {errors.email && <span className=\"error-text\">{errors.email}</span>}\n        </div>\n\n        <div className=\"input-group\">\n          <label className=\"input-label\" htmlFor=\"password\">\n            Password*\n          </label>\n          <div className=\"password-container\">\n            <input\n              id=\"password\"\n              type=\"password\"\n              className=\"input-field\"\n              placeholder=\"Min. 8 characters\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            <button\n              type=\"button\"\n              className=\"password-toggle\"\n              onClick={() => setPassword(password ? \"\" : password)}\n            >\n              Show\n            </button>\n          </div>\n          {errors.password && <span className=\"error-text\">{errors.password}</span>}\n        </div>\n\n        <div className=\"forgot-password\">\n          <a href=\"/forgot-password\" className=\"forgot-link\">\n            Forgot Password?\n          </a>\n        </div>\n\n        <button onClick={handleOnClick} className=\"signin-button\">\n          Sign In\n        </button>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}